# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely edit after that. If you find
# yourself editing this file very often, consider using Jekyll's data files
# feature for the data you need to update frequently.
#
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'bundle exec jekyll serve'. If you change this file, please restart the server process.
#
# If you need help with YAML syntax, here are some quick references for you:
# https://learn-the-web.algonquindesign.ca/topics/markdown-yaml-cheat-sheet/#yaml
# https://learnxinyminutes.com/docs/yaml/
#
# Site settings
# These are used to personalize your new site. If you look in the HTML files,
# you will see them accessed via {{ site.title }}, {{ site.email }}, and so on.
# You can create any custom variable you would like, and they will be accessible
# in the templates via {{ site.myvariable }}.

title: SwimOS Documentation
company: Nstream
company_website: https://nstream.io
email: your-email@example.com
description: >- # this means to ignore newlines until "baseurl:"
  SwimOS is an open source application platform that delivers the fastest 
  way to build real-time streaming data applications. Build stateful microservices, 
  streaming APIs, real-time UIs, and more.
baseurl: "" # the subpath of your site, e.g. /blog
url: "https://www.swimos.org" # the base hostname & protocol for your site, e.g. http://example.com
github_repository: https://github.com/swimos/swimos-docs
permalink: none
destination: _site

postcss:
  cache: false

# Build settings
plugins:
  - jekyll-feed
  - jekyll-seo-tag
  - jekyll-postcss
  - jekyll-toc
  - jekyll-redirect-from
  - jekyll-sitemap

# Exclude from processing.
# The following items will not be processed, by default.
# Any item listed under the `exclude:` key here will be automatically added to
# the internal "default list".
#
# Excluded items can be processed by explicitly listing the directories or
# their entries' file path in the `include:` list.
#
exclude:
  - .sass-cache/
  - .idea
  - .jekyll-cache/
  - .ruby-version
  - gemfiles/
  - Gemfile
  - Gemfile.lock
  - node_modules/
  - vendor/bundle/
  - vendor/cache/
  - vendor/gems/
  - vendor/ruby/
  - docker
  - docker-compose.yml
  - Jenkinsfile
  - s3_website.yml

# Every top level section is actually a collection. Their files are in a _folder in src/
collections:
  backend:
    kind: docs
    output: true
    name: "Backend"
    description: Documentation about SwimOS fundamentals and CLI useage.
    permalink: /backend/:name/
    order:
      - index.md
      # Concepts
      - fundamentals.md
      - lane-organization.md
      - agent-design.md
      # Guides
      - cli.md
      - introspection.md
      - time-series.md
      - summary-statistics.md
      - aggregations.md
      - kafka-ingestion.md
      - pulsar-ingestion.md
      - mongodb-ingestion.md
      - flink-connector.md
      - jms-ingestion.md
      - http-ingestion.md
      # Reference
      - swim-libraries.md
      - web-agents.md
      - lanes.md
      - command-lanes.md
      - value-lanes.md
      - map-lanes.md
      - join-value-lanes.md
      - join-map-lanes.md
      - demand-value-lanes.md
      - demand-map-lanes.md
      - planes.md
      - traits.md
      - links.md
      - downlinks.md
      - server-downlinks.md
      - forms.md
      - timers.md
      - ingress-bridges.md
      - egress-bridges.md
      - http-ingress-bridges.md
      - http-lanes.md
      - auth-policy.md
      - recon.md
      - warp.md
      # Category 1
      - doc1.md
      - doc5.md
      # Category 2
      - doc2.md
      # Category 3
      - doc3.md
      - doc4.md
    weight: 1
  frontend:
    kind: docs
    output: true
    name: "Swim UI"
    description: FURNTEND.
    permalink: /frontend/:name/
    order:
      - index.md
      # Category 1
      - doc1.md
      - doc5.md
      # Category 2
      - doc2.md
      # Category 3
      - doc3.md
      - doc4.md
    weight: 2
  tutorials:
    kind: docs
    output: true
    name: "Tutorials"
    order:
      - index.md
      - demos.md
      - transit.md
    weight: 3
  meta:
    output: true
    name: "Meta"
    order:
      - index.md
      - contribute.md
      - diataxis.md
      - styles.md
    weight: 4
  posts:
    output: false

# The directory that contains our collections
collections_dir: src

defaults:
  - scope:
      path: ""
    values:
      toc: true

# jekyll-toc Config
toc:
  list_id: toc # id of the <ul> for the toc
  list_class: mt-1 px-2 # We use TailwindCSS classes but you can also create your own
  sublist_class: '' # We use TailwindCSS classes but you can also create your own
  item_class: hover:text-swim-blue block rounded-md py-2 pr-2 pl-9 text-sm leading-6 text-swim-body-text # You guessed it, more TailwindCSS classes.
  item_prefix: toc- # Adds a toc-* class to each list item for styling. Ex. toc-h2 for list items that refer to an h2 in the doc body.

# Set display to true/false to toggle announcements on/off
# If developing locally, this requires a jekyll serve restart to test.
announcement:
  display: false
  cta: "Join us at StreamCon 2023!"
  text: "We'll be at booth #9001."
  cta-link: "https://nstream.io/"

feed:
  collections:
    - tutorials
    - backend
    - frontend
    - meta
